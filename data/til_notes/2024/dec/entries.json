{
  "entries": [
    {
      "title": "**Comprehensive Notes on Concurrency vs. Parallelism**  **üîÑ Overview** - Concurrency and parallelism are key concepts in system design. - They are often misunderstood but differ significantly:   - **Concurrency**: Managing multiple tasks by interleaving execution.   - **Parallelism**: Executing multiple tasks simultaneously.  ---  **‚ûï What is Concurrency?** - **Definition**: Making progress on multiple tasks at the same time by switching between them. - **Key Points**:   - Achieved through **threads**.   - Utilizes rapid **context switching**.   - Aims to maximize CPU utilization by reducing idle time. - **Example**: Writing code while listening to music üéµ.  **‚öôÔ∏è How Concurrency Works:** 1. **Context Switching**:    - **Saving State**: Current task‚Äôs state is saved.    - **Loading State**: Next task‚Äôs state is loaded.    - **Rapid Switching**: Happens so quickly it appears tasks are simultaneous. 2. **Costs**:    - **Overhead**: Context switching consumes time and resources.    - **Performance Impact**: Excessive switching can degrade efficiency.  **üîß Real-World Examples of Concurrency:** 1. **Web Browsers** üî§:    - Rendering pages.    - Fetching resources.    - Responding to user actions. 2. **Web Servers** üîß:    - Handling multiple client requests via threads or async I/O. 3. **Chat Applications** üí¨:    - Processing incoming/outgoing messages.    - Updating UI in real time. 4. **Video Games** üéÆ:    - Rendering graphics, user inputs, physics simulation, and audio simultaneously.  ---  **‚ûï What is Parallelism?** - **Definition**: Executing multiple tasks or subtasks at the same time. - **Key Points**:   - Tasks are divided into smaller **independent subtasks**.   - Subtasks are processed simultaneously using multiple cores or GPUs.   - Aims to achieve true simultaneous execution. - **Example**: Cooking with multiple chefs in a kitchen üç≤.  **‚öôÔ∏è How Parallelism Works:** 1. **Task Division**: Split tasks into independent parts. 2. **Task Assignment**: Assign parts to separate processing units (e.g., cores). 3. **Simultaneous Execution**: Subtasks processed in parallel. 4. **Result Aggregation**: Combine results into final output.  **üîß Real-World Examples of Parallelism:** 1. **Machine Learning** ü§ñ:    - Training on datasets divided across GPUs or CPU cores. 2. **Video Rendering** üé•:    - Processing frames simultaneously for faster results. 3. **Web Crawlers** üîé:    - Fetching data from multiple websites in parallel. 4. **Big Data Processing** üìä:    - Frameworks like Apache Spark distribute tasks across clusters. 5. **Scientific Simulations** ‚öõÔ∏è:    - Weather modeling or molecular simulations.  ---  **üîó Combining Concurrency and Parallelism**  ### ‚ö™ Concurrent, Not Parallel: - **Description**: Multiple tasks progress simultaneously but not executed simultaneously. - **Example**: Single-core CPU rapidly switching between tasks.  ### ‚ö™ Parallel, Not Concurrent: - **Description**: Single task divided into subtasks, executed simultaneously on separate cores. - **Example**: Video rendering without overlapping tasks.  ### ‚ö™ Neither Concurrent Nor Parallel: - **Description**: Tasks executed sequentially, one after another. - **Example**: Single-core CPU processing tasks one at a time.  ### ‚ö™ Concurrent and Parallel: - **Description**: Multiple tasks progress simultaneously with subtasks executed in parallel. - **Example**: Multi-core CPU running subtasks both concurrently and in parallel.  ---  **üî∫ Summary:** - **Concurrency**: Efficient task switching to maximize CPU utilization ‚è≥. - **Parallelism**: True simultaneous execution of tasks ‚ö°. - Combining both techniques often yields the best performance depending on the problem and hardware.",
      "date": "2024-12-27",
      "tags": [
        "system-design",
        "os"
      ],
      "difficulty": "medium",
      "references": [
        {
          "title": "AlgoMaster Article",
          "url": "https://blog.algomaster.io/p/concurrency-vs-parallelism"
        }
      ],
      "content": "One is about managing multiple tasks simultaneously, while the other is about executing multiple tasks at the same time.",
      "notes_md": "concurrency_vs_parallelism.md"
    },
    {
      "title": "How to Choose the Right Database in a System Design Interview",
      "date": "2024-12-26",
      "tags": [
        "dbms",
        "system-design"
      ],
      "difficulty": "medium",
      "references": [
        {
          "title": "AlgoMaster Article",
          "url": "https://blog.algomaster.io/p/how-to-choose-the-right-database?utm_source=post-email-title&publication_id=2202268&post_id=152506708&utm_campaign=email-post-title&isFreemail=true&r=as3y0&triedRedirect=true&utm_medium=email"
        }
      ],
      "content": "Choosing the wrong database can lead to high latency, data loss, or even system downtime.",
      "notes_md": "choose_right_database.md"
    },
    {
      "title": "What is Service Discovery?",
      "date": "2024-12-26",
      "tags": [
        "system-design"
      ],
      "difficulty": "medium",
      "references": [
        {
          "title": "AlgoMaster Article",
          "url": "https://blog.algomaster.io/p/service-discovery-in-distributed-systems"
        }
      ],
      "content": "Service discovery is a mechanism that allows services in a distributed system to find and communicate with each other dynamically.",
      "notes_md": "service_discovery_ashish.md"
    },
    {
      "date": "2024-12-20",
      "title": "What is Latency and How to Reduce it?",
      "content": "Algomaster Newsletter: on how to reduce latency in the system",
      "references": [
        {
          "title": "Article",
          "url": "https://blog.algomaster.io/p/latency-and-how-to-reduce-it"
        }
      ],
      "difficulty": "medium",
      "tags": [
        "system-design"
      ],
      "notes_md": "latency_and_reduce.md"
    },
    {
      "date": "2024-12-18",
      "title": "Python tip: always specify your file encoding",
      "content": "Always specify file encoding when opening files in Python to prevent cross-platform text handling errors between different operating systems.",
      "references": [
        {
          "title": "Guide to Character encoding",
          "url": "https://www.honeybadger.io/blog/python-character-encoding/"
        }
      ],
      "difficulty": "medium",
      "tags": [
        "python"
      ],
      "notes_md": "py_file_encoding.md"
    },
    {
      "date": "2024-12-17",
      "title": "Avro File Format",
      "content": "Avro is an open source project that provides data serialization and data exchange services for Apache Hadoop. These services can be used together or independently.",
      "references": [
        {
          "title": "Avro Official Docs",
          "url": "https://avro.apache.org/docs/"
        }
      ],
      "difficulty": "medium",
      "tags": [
        "system-design",
        "data-platform",
        "data-analytics"
      ],
      "notes_md": "avro.md"
    },
    {
      "date": "2024-12-16",
      "title": "Columnar Databases vs. Row-Oriented Databases",
      "content": "Choosing the right database structure determines the efficiency and performance of your application. An application's speed, scalability, and maintenance depend upon the underlying database structure. Columnar databases and row-oriented databases are two common database structures with distinct characteristics.",
      "references": [
        {
          "title": "Timescale Article",
          "url": "https://www.timescale.com/learn/columnar-databases-vs-row-oriented-databases-which-to-choose"
        }
      ],
      "difficulty": "medium",
      "tags": [
        "system-design",
        "data-platform",
        "dbms"
      ],
      "notes_md": "row_vs_columnar_storage.md"
    },
    {
      "date": "2024-12-15",
      "title": "Article: How to Make Coding Fun and Addictive",
      "content": "Coding can be made as engaging as video games or social media through dopamine-driven motivation",
      "references": [
        {
          "title": "Substack Article",
          "url": "https://blog.algomaster.io/p/how-to-make-coding-fun-and-addictive?r=as3y0&utm_campaign=post&utm_medium=web"
        }
      ],
      "difficulty": "easy",
      "tags": [
        "general",
        "article"
      ],
      "notes_md": "how_to_make_coding_fun.md"
    },
    {
      "date": "2024-12-14",
      "title": "How Hadoop DistCp works?",
      "content": "DistCp (distributed copy) is a tool used for large inter/intra-cluster copying. It uses MapReduce to effect its distribution, error handling and recovery, and reporting. It expands a list of files and directories into input to map tasks, each of which will copy a partition of the files specified in the source list",
      "references": [
        {
          "title": "DistCp Guide",
          "url": "https://hadoop.apache.org/docs/current/hadoop-distcp/DistCp.html"
        }
      ],
      "difficulty": "medium",
      "tags": [
        "hadoop",
        "data-platform"
      ],
      "notes_md": "hadoop_distcp.md"
    },
    {
      "date": "2024-12-13",
      "title": "Spark Application, Anatomy and Execution",
      "content": "The fundamental aspects of Spark's architecture, execution model, and various components that work together to process distributed data efficiently.",
      "references": [
        {
          "title": "Anatomy of Apache Spark Application",
          "url": "https://luminousmen.com/post/spark-anatomy-of-spark-application/"
        },
        {
          "title": "RDD Programming Guide",
          "url": "https://spark.apache.org/docs/latest/rdd-programming-guide.html"
        }
      ],
      "difficulty": "medium",
      "tags": [
        "spark"
      ],
      "notes_md": "spark_app_anatomy_execution.md"
    },
    {
      "date": "2024-12-12",
      "title": "Spark API's",
      "content": "Detailed guide on different ways to interact with Spark as user.",
      "references": [
        {
          "title": "Spark API",
          "url": "https://www.databricks.com/glossary/spark-api"
        }
      ],
      "difficulty": "medium",
      "tags": [
        "spark"
      ],
      "notes_md": "spark_apis.md"
    },
    {
      "date": "2024-12-11",
      "title": "Spark Application Lifecycle",
      "content": "Spark jobs flow through submission, driver initialization, executor setup, task execution, and completion, managed by Resource Manager.",
      "references": [
        {
          "title": "Databricks Doc",
          "url": "https://www.databricks.com/glossary/what-are-spark-applications"
        }
      ],
      "difficulty": "medium",
      "tags": [
        "system-design",
        "spark"
      ],
      "notes_md": "spark_app_lifecycle.md"
    },
    {
      "date": "2024-12-09",
      "title": "Why should a container have only one process?",
      "content": "Try to design your containers to run one process per container for better isolation, scalability, and resource efficiency. By Govardhana M K",
      "references": [],
      "difficulty": "medium",
      "tags": [
        "system-design"
      ],
      "notes_md": "why_one_process_per_container.md"
    },
    {
      "date": "2024-12-19",
      "title": "Mastering Python Project Management with uv",
      "content": "Learned about new way of project management in Python using uv. Learnt, it is very fast compared to normal pip operations.",
      "references": [
        {
          "title": "Youtube Video",
          "url": "https://www.youtube.com/watch?v=jXWIxk2brfk"
        },
        {
          "title": "Medium Article Part 1",
          "url": "https://bury-thomas.medium.com/mastering-python-project-management-with-uv-part1-its-time-to-ditch-poetry-c2590091d90a"
        },
        {
          "title": "Medium Article Part 2",
          "url": "https://bury-thomas.medium.com/mastering-python-project-management-with-uv-part-2-deep-dives-and-advanced-use-1e2540e6f4a6"
        }
      ],
      "difficulty": "medium",
      "tags": [
        "python"
      ],
      "notes_md": "mastering_python_project_management_with_uv.md"
    },
    {
      "date": "2024-12-10",
      "title": "What is an API Gateway?",
      "content": "An in-depth guide to understanding API Gateways - from their core purpose of managing communication between clients and microservices to practical implementation details like authentication, rate limiting, and request routing.",
      "references": [
        {
          "title": "Article",
          "url": "https://blog.algomaster.io/p/what-is-an-api-gateway?utm_source=substack&publication_id=2202268&post_id=152508834&utm_medium=email&utm_content=share&utm_campaign=email-share&triggerShare=true&isFreemail=true&r=as3y0&triedRedirect=true"
        }
      ],
      "difficulty": "medium",
      "tags": [
        "system-design"
      ],
      "notes_md": "api_gateway_notes.md"
    },
    {
      "date": "2024-12-08",
      "title": "Dbt Sematic Layer, powered by MetricFlow",
      "content": "The DBT Semantic Layer enables consistent, trusted, and scalable metrics across tools by bridging data and human language, empowering organizations to unlock higher-value insights efficiently.",
      "references": [
        {
          "title": "YT Video",
          "url": "https://www.youtube.com/watch?v=2Qo5_CIsSH4"
        },
        {
          "title": "dbt Labs | Sematic Layer",
          "url": "https://www.getdbt.com/product/semantic-layer"
        },
        {
          "title": "MetricFlow Repository",
          "url": "https://github.com/dbt-labs/metricflow"
        },
        {
          "title": "MetricFlow Docs",
          "url": "https://docs.getdbt.com/docs/build/about-metricflow"
        }
      ],
      "difficulty": "medium",
      "tags": [
        "data-analytics",
        "data-platform"
      ],
      "notes_md": "dbt_sematic_layer_yt_video.md"
    },
    {
      "title": "Python Virtual Environments: What? Why? How?",
      "date": "2024-12-21",
      "tags": [
        "python"
      ],
      "difficulty": "easy",
      "references": [
        {
          "title": "Article",
          "url": "https://medium.com/@manthan.gowda/python-virtual-environments-what-why-how-58b288e0f605"
        }
      ],
      "content": "A virtual environment in Python is an isolated, self-contained directory that contains a specific Python installation and its associated packages.",
      "notes_md": "pvenv.md"
    },
    {
      "title": "The Sidecar Pattern Explained: Decoupling Operational Features",
      "date": "2024-12-22",
      "tags": [
        "system-design"
      ],
      "difficulty": "medium",
      "references": [
        {
          "title": "ByteByteGo Article",
          "url": "https://substack.com/home/post/p-153337805"
        }
      ],
      "content": "The Sidecar Pattern attaches a secondary helper component to a main application to provide support services independently.",
      "notes_md": "sidecar_pattern.md"
    },
    {
      "title": "8 Basic Principles for DevOps and Cloud Engineering Career Success",
      "date": "2024-12-23",
      "tags": [
        "system-design",
        "devops"
      ],
      "difficulty": "medium",
      "references": [],
      "content": "In the rapidly evolving fields of DevOps and Cloud Engineering, adhering to key principles can significantly enhance your career success. These principles provide a framework for efficiency, reliability, and scalability while enabling you to navigate complex systems effectively.",
      "notes_md": "8_pri_devops_success.md"
    },
    {
      "title": "Avoid SELECT *, even on a single-column tables",
      "date": "2024-12-24",
      "tags": [
        "dbms",
        "system-design"
      ],
      "difficulty": "easy",
      "references": [
        {
          "title": "Medium Article",
          "url": "https://medium.com/@hnasr/avoid-select-even-on-a-single-column-tables-d6deed7b4aee"
        }
      ],
      "content": "Avoid using SELECT * in database queries, even on single-column tables, to prevent performance issues and inefficiencies",
      "notes_md": "avoid_select_star.md"
    },
    {
      "title": "7 Simple Tips to Improve Daily Focus",
      "date": "2024-12-25",
      "tags": [
        "productivity",
        "self-help"
      ],
      "difficulty": "easy",
      "references": [
        {
          "title": "Medium Article",
          "url": "https://medium.com/twosapp/7-simple-tips-to-improve-your-daily-focus-6300d93effc8"
        },
        {
          "title": "TwosApp List",
          "url": "https://www.twosapp.com/664640cced49084f4794ebf3"
        }
      ],
      "content": "Focus can vary daily, making it crucial to adopt effective strategies for consistent concentration. These tips are designed for everyone, including those with ADHD, to enhance focus and productivity.",
      "notes_md": "7_tips_improve_daily_focus.md"
    }
  ]
}